{% extends "en-us/PageLayout.htm" %}
{%- block htmTitlePageLayout %}
{%- block htmTitleGpuSlicePage %}
    <title>{{ result.title }}</title>
{%- endblock htmTitleGpuSlicePage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/gpu-slice/GpuSlice.css"/>
{%- block htmStylesGpuSlicePage %}
{%- endblock htmStylesGpuSlicePage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
{{ super() }}
{%- block htmStyleGpuSlicePage %}
{%- endblock htmStyleGpuSlicePage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsGpuSlicePage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/gpu-slice/GpuSlice.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/gpu-slice/GpuSliceSearchPage.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/gpu-slice/GpuSliceEditPage.js"></script>
{%- endblock htmScriptsGpuSlicePage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptGpuSlicePage %}
    <script>

      function jsWebsocketGpuSlice(entityId, vars, $response) {
{%- block jsWebsocketGpuSlicePage %}{%- endblock %}
      }

      function jsTooltipGpuSlice(e, feature) {
{%- block jsTooltipGpuSlicePage %}{%- endblock %}
      }

      function htmTooltipGpuSlice(feature, layer) {
        return `{%- block htmTooltipGpuSlicePage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.title}</a></h3>
{%- endblock htmTooltipGpuSlicePage %}`;
      }

      function jsLegendGpuSlice(map) {
{%- block jsLegendGpuSlicePage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listGpuSlice.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendGpuSlice(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendGpuSlicePage %}
      }

      function htmLegendGpuSlice(map, shape, result, index, count) {
        var color = result.locationColors[index];
        var title = result.locationTitles[index];
        var url = result.locationLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendGpuSlicePage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <i class="fa-light fa-circle" style="color: ${color}; "></i>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendGpuSlicePage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleGpuSlice(feature) {
{%- block jsStyleGpuSlicePage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleGpuSlicePage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { lat: {{ DEFAULT_MAP_LOCATION.lat }}, lon: {{ DEFAULT_MAP_LOCATION.lon }} };
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
      ]).then(() => {

        var entityId = {% if result.entityId is defined %}{{ result.entityId | tojson }}{% else %}null{% endif %};

        if(entityId == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if entityId is defined %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listGpuSlice')?.value;
        if(l)
          window.listGpuSlice = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphGpuSlice();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qGpuSlice_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('GpuSlice', event.target, document.querySelector('#qGpuSliceDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qGpuSlice_rows')?.addEventListener('wa-change', event => {
          paramChange('GpuSlice', event.target, document.querySelector('#qGpuSliceDiv_rows'));
        });

        document.querySelector('#qGpuSlice_start')?.addEventListener('wa-change', event => {
          paramChange('GpuSlice', event.target, document.querySelector('#qGpuSliceDiv_start'));
        });


        var submitForm_patchGpuSlice = document.querySelector('#htmForm_patchGpuSlice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchGpuSlice')?.addEventListener('click', event => {
          event.preventDefault();
          patchGpuSlice(null, document.querySelector('#htmForm_patchGpuSlice'), document.querySelector('#htmFormButton_patchGpuSlice'), event.target.getAttribute('data-entityId'));
          return false;
        });

        var submitForm_postGpuSlice = document.querySelector('#htmForm_postGpuSlice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postGpuSlice')?.addEventListener('click', event => {
          event.preventDefault();
          postGpuSlice(document.querySelector('#htmForm_postGpuSlice'), document.querySelector('#htmFormButton_postGpuSlice'), (response, target) => { response.json().then((json) => { window.location.href = json.editPage; }); });
          return false;
        });

        var submitForm_deleteGpuSlice = document.querySelector('#htmForm_deleteGpuSlice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteGpuSlice')?.addEventListener('click', event => {
          event.preventDefault();
          deleteGpuSlice(event.target, event.target.getAttribute('data-entityId'));
          return false;
        });

        var submitForm_putimportGpuSlice = document.querySelector('#htmForm_putimportGpuSlice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportGpuSlice')?.addEventListener('click', event => {
          event.preventDefault();
          putimportGpuSlice(document.querySelector('#htmForm_putimportGpuSlice'), document.querySelector('#htmFormButton_putimportGpuSlice'));
          return false;
        });

        var submitForm_searchpageGpuSlice = document.querySelector('#htmForm_searchpageGpuSlice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageGpuSlice')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageGpuSlice();
          return false;
        });
      });
    </script>
{%- endblock htmScriptGpuSlicePage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketGpuSlicePage %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketGpuSlice(websocketGpuSliceInner);
{%- endblock websocketGpuSlicePage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlGpuSlicePage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlGpuSlicePage %}

{%- block htmBodyStartPageLayout %}
    {{ super() }}
{%- block htmBodyStartGpuSlicePage %}
{%- endblock htmBodyStartGpuSlicePage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleGpuSlicePage %}
{%- include en-us/search/gpu-slice/GpuSliceSidebar.htm %}
{%- include en-us/search/gpu-slice/GpuSliceSuggestedSearch.htm %}
        <div class="main-content">
{% if resultCount == 0 %}
        {% if varsFqCount > 0 %}
        <wa-tooltip for="return-to-GpuSlice">back to all GPU slices</wa-tooltip>
          <wa-button id="return-to-GpuSlice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
            <i class="fa-solid fa-angle-left"></i>
            all GPU slices
          </wa-button>
        </wa-tooltip>
        {% endif %}
        <h1><i class="fa-regular fa-cake-slice"></i> <span>GPU slices</span></h1>
{% include en-us/search/gpu-slice/GpuSliceSearchButtons.htm %}
{% include en-us/search/gpu-slice/GpuSliceSearchForm.htm %}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no GPU slice found</span>
          </span>
        </h2>
{% else %}
  {% if resultCount == 1 %}
    {% if solrId is defined %}
          <div class="margin-block">
            <wa-tooltip for="return-to-GpuSlice">back to all GPU slices</wa-tooltip>
            <wa-button id="return-to-GpuSlice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-solid fa-angle-left"></i>
              all GPU slices
            </wa-button>
          </div>
{% include en-us/search/gpu-slice/GpuSliceSearchButtons.htm %}
{% include en-us/search/gpu-slice/GpuSliceSearchForm.htm %}
          <h1 class="Page_title"><i class="fa-regular fa-cake-slice"></i> {{ result.title | e }}</h1>
    {% else %}
        {% if varsFqCount > 0 %}
        <wa-tooltip for="return-to-GpuSlice">back to all GPU slices</wa-tooltip>
          <wa-button id="return-to-GpuSlice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
            <i class="fa-solid fa-angle-left"></i>
            all GPU slices
          </wa-button>
        </wa-tooltip>
        {% endif %}
        <h1><i class="fa-regular fa-cake-slice"></i> <span>GPU slices</span></h1>
{% include en-us/search/gpu-slice/GpuSliceSearchButtons.htm %}
{% include en-us/search/gpu-slice/GpuSliceSearchForm.htm %}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no GPU slice found</span>
          </span>
        </h2>
    {% endif %}
  {% else %}
        {% if varsFqCount > 0 %}
        <wa-tooltip for="return-to-GpuSlice">back to all GPU slices</wa-tooltip>
          <wa-button id="return-to-GpuSlice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
            <i class="fa-solid fa-angle-left"></i>
            all GPU slices
          </wa-button>
        </wa-tooltip>
        {% endif %}
        <h1><i class="fa-regular fa-cake-slice"></i> <span>GPU slices</span></h1>
{% include en-us/search/gpu-slice/GpuSliceSearchButtons.htm %}
{% include en-us/search/gpu-slice/GpuSliceSearchForm.htm %}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no GPU slice found</span>
          </span>
        </h2>
  {% endif %}
{% endif %}
{%- block htmFormGpuSlicePage %}
          <form action="/en-us/api/gpu-slice" id="GpuSliceForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
{% if entityId is defined %}
            <input name="entityId" class="valueEntityId" type="hidden" value="{{entityId}}"/>
            {% endif %}
            <input name="focusId" type="hidden"/>
            <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
            <input name="result" id="result" class="result"  value='{{ toJsonObjectStringInApostrophes(result) }}' type="hidden"/>
            <input name="listGpuSlice" id="listGpuSlice" class="listGpuSlice"  value='{{ toJsonArrayStringInApostrophes(listGpuSlice) }}' type="hidden"/>
          </form>
  {% if solrId is defined %}
          {{ htmButton_searchpageGpuSlice() }}
          {{ htmForm_searchpageGpuSlice() }}
  {% endif %}
{%- endblock htmFormGpuSlicePage %}
        </div>
{%- endblock htmBodyMiddleGpuSlicePage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
      {{ super() }}
{%- block htmBodyEndGpuSlicePage %}
{%- endblock htmBodyEndGpuSlicePage %}
{%- endblock htmBodyEndPageLayout %}
{%- macro inputPkGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_pk">
  {%- endif %}
                  <wa-input
                      readonly
                      placeholder="[Long] primary key"
                      label="primary key"
                      help-text="
The primary key of this object in the database"
                      id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classGpuSlice inputGpuSlice{{entityId}}Pk "
                      name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classGpuSlice inputGpuSlice{{entityId}}Pk "
                      name="setPk"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_pk valuePk classGpuSlice inputGpuSlice{{entityId}}Pk "
                      name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.pk | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputPkGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputCreatedGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_created">
  {%- endif %}
                  <wa-input
                      type="text"
                      readonly
                      help-text="A created timestamp for this record in the database"
                      label="created"
                      class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classGpuSlice inputGpuSlice{{entityId}}Created "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_created"
                      value="{%- if result.created is defined %}{{ formatZonedDateTime(result.created, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-entityId={{ result.entityId | tojson }}
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputCreatedGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputModifiedGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_modified">
  {%- endif %}
                  <wa-input
                      type="text"
                      readonly
                      help-text="A modified timestamp for this record in the database"
                      label="modified"
                      class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classGpuSlice inputGpuSlice{{entityId}}Modified "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_modified"
                      value="{%- if result.modified is defined %}{{ formatZonedDateTime(result.modified, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-entityId={{ result.entityId | tojson }}
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputModifiedGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputArchivedGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-button variant="brand"
                      id="{{classApiMethodMethod}}_archived"
                      placeholder="archive"
                      label="archive"
                      help-text="For archiving this record"
                      class="label-on-left {{classApiMethodMethod}}_archived classGpuSlice inputGpuSlice{{entityId}}Archived "
                      name="setArchived"
                      data-entityId={{ result.entityId | tojson }}
                      data-val="{{ result.archived | e }}"
                      >archive</wa-button>
  {%- else %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-checkbox
                      id="{{classApiMethodMethod}}_archived"
                      value="true"
  {%- else %}
                  <wa-select
                      id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="archive"
                      label="archive"
                      help-text="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classGpuSlice inputGpuSlice{{entityId}}Archived "
                      name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classGpuSlice inputGpuSlice{{entityId}}Archived "
                      name="setArchived"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classGpuSlice inputGpuSlice{{entityId}}Archived "
                      name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if result.archived == true %}
                      checked
    {%- endif %}
                      data-entityId={{ result.entityId | tojson }}
                      >archive</wa-checkbox>
  {%- else %}
                      >
                    <wa-option value="" selected="selected"></wa-option>
                    <wa-option value="true">true</wa-option>
                    <wa-option value="false">false</wa-option>
                  </wa-select>
  {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputArchivedGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputSliceNameGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_sliceName">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] name"
                      label="name"
                      help-text="
The name of this GPU slice"
                      id="{{classApiMethodMethod}}_sliceName"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_sliceName setSliceName classGpuSlice inputGpuSlice{{entityId}}SliceName "
                      name="setSliceName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_sliceName setSliceName classGpuSlice inputGpuSlice{{entityId}}SliceName "
                      name="setSliceName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_sliceName valueSliceName classGpuSlice inputGpuSlice{{entityId}}SliceName "
                      name="sliceName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.sliceName | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmSliceNameGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputSliceNameGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDescriptionGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_description">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] description"
                      label="description"
                      help-text="
A description of this GPU device"
                      id="{{classApiMethodMethod}}_description"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classGpuSlice inputGpuSlice{{entityId}}Description "
                      name="setDescription"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classGpuSlice inputGpuSlice{{entityId}}Description "
                      name="setDescription"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_description valueDescription classGpuSlice inputGpuSlice{{entityId}}Description "
                      name="description"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.description | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDescriptionGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDescriptionGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputEntityIdGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_entityId">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] entity ID"
                      label="entity ID"
                      help-text="
A unique ID for this Smart Data Model"
                      id="{{classApiMethodMethod}}_entityId"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_entityId setEntityId classGpuSlice inputGpuSlice{{entityId}}EntityId "
                      name="setEntityId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_entityId setEntityId classGpuSlice inputGpuSlice{{entityId}}EntityId "
                      name="setEntityId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_entityId valueEntityId classGpuSlice inputGpuSlice{{entityId}}EntityId "
                      name="entityId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.entityId | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmEntityIdGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputEntityIdGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputLocationGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_location">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[Point] location"
                      label="location"
                      help-text="
Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon"
                      id="{{classApiMethodMethod}}_location"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classGpuSlice inputGpuSlice{{entityId}}Location "
                      name="setLocation"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classGpuSlice inputGpuSlice{{entityId}}Location "
                      name="setLocation"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_location valueLocation classGpuSlice inputGpuSlice{{entityId}}Location "
                      name="location"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{ toJsonObjectString(result.location) | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmLocationGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputLocationGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDisplayPageGpuSlicePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_displayPage">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-button variant="brand"
                      id="{{classApiMethodMethod}}_displayPage"
                      placeholder="[String] product page"
                      label="product page"
                      help-text="Visit this product's landing page. "
                      class="button-on-left {{classApiMethodMethod}}_displayPage classGpuSlice inputGpuSlice{{entityId}}DisplayPage "
                      name="setDisplayPage"
                      href="{{ result.displayPage | e }}"
                      >
                    product page
                  </wa-button>
                  <div class="button-description-on-right ">Visit this product's landing page. </div>
  {%- else %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] product page"
                      label="product page"
                      help-text="
Visit this product's landing page. "
                      id="{{classApiMethodMethod}}_displayPage"
  {%- if "Page" == classApiMethodMethod %}
                      data-entityId={{ result.entityId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_displayPage setDisplayPage classGpuSlice inputGpuSlice{{entityId}}DisplayPage "
                      name="setDisplayPage"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_displayPage setDisplayPage classGpuSlice inputGpuSlice{{entityId}}DisplayPage "
                      name="setDisplayPage"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_displayPage valueDisplayPage classGpuSlice inputGpuSlice{{entityId}}DisplayPage "
                      name="displayPage"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.displayPage | e }}"
  {%- endif %}
                      ></wa-input>

  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDisplayPageGpuSlicePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDisplayPageGpuSlicePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
