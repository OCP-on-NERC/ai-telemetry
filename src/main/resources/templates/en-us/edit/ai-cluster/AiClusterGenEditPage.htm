{% extends "en-us/PageLayout.htm" %}
{%- block htmTitlePageLayout %}
{%- block htmTitleAiClusterPage %}
    <title>{{ result.title }}</title>
{%- endblock htmTitleAiClusterPage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/ai-cluster/AiCluster.css"/>
{%- block htmStylesAiClusterPage %}
{%- endblock htmStylesAiClusterPage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
{{ super() }}
{%- block htmStyleAiClusterPage %}
{%- endblock htmStyleAiClusterPage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsAiClusterPage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/ai-cluster/AiCluster.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/ai-cluster/AiClusterSearchPage.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/ai-cluster/AiClusterEditPage.js"></script>
{%- endblock htmScriptsAiClusterPage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptAiClusterPage %}
    <script>

      function jsWebsocketAiCluster(clusterName, vars, $response) {
{%- block jsWebsocketAiClusterPage %}{%- endblock %}
      }

      function jsTooltipAiCluster(e, feature) {
{%- block jsTooltipAiClusterPage %}{%- endblock %}
      }

      function htmTooltipAiCluster(feature, layer) {
        return `{%- block htmTooltipAiClusterPage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.title}</a></h3>
{%- endblock htmTooltipAiClusterPage %}`;
      }

      function jsLegendAiCluster(map) {
{%- block jsLegendAiClusterPage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listAiCluster.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendAiCluster(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendAiClusterPage %}
      }

      function htmLegendAiCluster(map, shape, result, index, count) {
        var color = result.locationColors[index];
        var title = result.locationTitles[index];
        var url = result.locationLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendAiClusterPage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <i class="{{ FONTAWESOME_STYLE }} fa-circle" style="color: ${color}; "></i>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendAiClusterPage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleAiCluster(feature) {
{%- block jsStyleAiClusterPage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
            , contextmenu: true
            , contextmenuItems: [
              {
                text: 'Show coordinates'
                , callback: function(event) {
                  alert(event2.target.getLatLngs());
                }
              }
            ]
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleAiClusterPage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { type: 'Point', coordinates: [ {{ DEFAULT_MAP_LOCATION.coordinates[0] }}, {{ DEFAULT_MAP_LOCATION.coordinates[1] }} ]};
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
      ]).then(() => {

        var clusterName = {% if result.clusterName is defined %}{{ result.clusterName | tojson }}{% else %}null{% endif %};

        if(clusterName == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if clusterName is defined %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listAiCluster')?.value;
        if(l)
          window.listAiCluster = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphAiCluster();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qAiCluster_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('AiCluster', event.target, document.querySelector('#qAiClusterDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qAiCluster_rows')?.addEventListener('change', event => {
          paramChange('AiCluster', event.target, document.querySelector('#qAiClusterDiv_rows'));
        });

        document.querySelector('#qAiCluster_start')?.addEventListener('change', event => {
          paramChange('AiCluster', event.target, document.querySelector('#qAiClusterDiv_start'));
        });


        var submitForm_patchAiCluster = document.querySelector('#htmForm_patchAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          patchAiCluster(null, document.querySelector('#htmForm_patchAiCluster'), document.querySelector('#htmFormButton_patchAiCluster'), event.target.getAttribute('data-clusterName'));
          return false;
        });

        var submitForm_postAiCluster = document.querySelector('#htmForm_postAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          postAiCluster(document.querySelector('#htmForm_postAiCluster'), document.querySelector('#htmFormButton_postAiCluster'), (response, target) => { response.json().then((json) => { window.location.href = json.editPage; }); });
          return false;
        });

        var submitForm_deleteAiCluster = document.querySelector('#htmForm_deleteAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          deleteAiCluster(event.target, event.target.getAttribute('data-clusterName'));
          return false;
        });

        var submitForm_putimportAiCluster = document.querySelector('#htmForm_putimportAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          putimportAiCluster(document.querySelector('#htmForm_putimportAiCluster'), document.querySelector('#htmFormButton_putimportAiCluster'));
          return false;
        });

        var submitForm_searchpageAiCluster = document.querySelector('#htmForm_searchpageAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageAiCluster();
          return false;
        });

        var submitForm_deletefilterAiCluster = document.querySelector('#htmForm_deletefilterAiCluster')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deletefilterAiCluster')?.addEventListener('click', event => {
          event.preventDefault();
          deletefilterAiCluster(event.target);
          return false;
        });
      });
    </script>
{%- endblock htmScriptAiClusterPage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketAiClusterPage %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketAiCluster(websocketAiClusterInner);
{%- endblock websocketAiClusterPage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlAiClusterPage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlAiClusterPage %}

{%- block htmBodyStartPageLayout %}
    {{ super() }}
{%- block htmBodyStartAiClusterPage %}
{% if resultCount > 0 %}
          <div class="wa-flank ">
            <wa-tooltip for="return-to-AiCluster">back to all AI clusters</wa-tooltip>
            <wa-button id="return-to-AiCluster" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="{{ FONTAWESOME_STYLE }} fa-angle-left"></i>
              all AI clusters
            </wa-button>
            <h1 class="Page_title"><i class="fa-regular fa-server"></i> {{ result.title | e }}</h1>
          </div>
          <div class="margin-block">
          </div>
{% include en-us/search/ai-cluster/AiClusterSearchButtons.htm %}
{% include en-us/search/ai-cluster/AiClusterSearchForm.htm %}
{% endif %}
{%- endblock htmBodyStartAiClusterPage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleAiClusterPage %}
        <div class="main-content">
{% if resultCount == 0 %}
        {% if varsFqCount > 0 %}
        <wa-tooltip for="return-to-AiCluster">back to all AI clusters</wa-tooltip>
          <wa-button id="return-to-AiCluster" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
            <i class="{{ FONTAWESOME_STYLE }} fa-angle-left"></i>
            all AI clusters
          </wa-button>
        </wa-tooltip>
        {% endif %}
        <h1><i class="fa-regular fa-server"></i> <span>AI clusters</span></h1>
{% include en-us/search/ai-cluster/AiClusterSearchButtons.htm %}
{% include en-us/search/ai-cluster/AiClusterSearchForm.htm %}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no AI cluster found</span>
          </span>
        </h2>
{% else %}
{%- include en-us/search/ai-cluster/AiClusterSidebar.htm %}
{%- include en-us/search/ai-cluster/AiClusterSuggestedSearch.htm %}
{% endif %}
{%- block htmFormAiClusterPage %}
          <form action="/en-us/api/ai-cluster" id="AiClusterForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
{% if clusterName is defined %}
            <input name="clusterName" class="valueClusterName" type="hidden" value="{{clusterName}}"/>
            {% endif %}
            <input name="focusId" type="hidden"/>
            <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
            <input name="result" id="result" class="result"  value='{{ toJsonObjectStringInApostrophes(result) }}' type="hidden"/>
            <input name="listAiCluster" id="listAiCluster" class="listAiCluster"  value='{{ toJsonArrayStringInApostrophes(listAiCluster) }}' type="hidden"/>
          </form>
  {% if solrId is defined %}
          {{ htmButton_searchpageAiCluster() }}
          {{ htmForm_searchpageAiCluster() }}
  {% endif %}
{%- endblock htmFormAiClusterPage %}
        </div>
{%- endblock htmBodyMiddleAiClusterPage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
      {{ super() }}
{%- block htmBodyEndAiClusterPage %}
{%- endblock htmBodyEndAiClusterPage %}
{%- endblock htmBodyEndPageLayout %}
