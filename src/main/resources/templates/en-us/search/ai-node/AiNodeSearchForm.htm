{%- macro inputPkAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_pk">
  {%- endif %}
                  <wa-input
                      readonly
                      placeholder="[Long] primary key"
                      label="primary key"
                      hint="
The primary key of this object in the database"
                      id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classAiNode inputAiNode{{nodeId}}Pk "
                      name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classAiNode inputAiNode{{nodeId}}Pk "
                      name="setPk"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_pk valuePk classAiNode inputAiNode{{nodeId}}Pk "
                      name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.pk | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputPkAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputCreatedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_created">
  {%- endif %}
                  <wa-input
                      type="text"
                      readonly
                      hint="A created timestamp for this record in the database"
                      label="created"
                      class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classAiNode inputAiNode{{nodeId}}Created "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_created"
                      value="{%- if result.created is defined %}{{ formatZonedDateTime(result.created, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-nodeId={{ result.nodeId | tojson }}
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputCreatedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputModifiedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_modified">
  {%- endif %}
                  <wa-input
                      type="text"
                      readonly
                      hint="A modified timestamp for this record in the database"
                      label="modified"
                      class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classAiNode inputAiNode{{nodeId}}Modified "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_modified"
                      value="{%- if result.modified is defined %}{{ formatZonedDateTime(result.modified, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-nodeId={{ result.nodeId | tojson }}
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputModifiedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputArchivedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-button variant="brand"
                      id="{{classApiMethodMethod}}_archived"
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{nodeId}}Archived "
                      name="setArchived"
                      data-nodeId={{ result.nodeId | tojson }}
                      data-val="{{ result.archived | e }}"
                      >archive</wa-button>
  {%- else %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-checkbox
                      id="{{classApiMethodMethod}}_archived"
                      value="true"
  {%- else %}
                  <wa-select
                      id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{nodeId}}Archived "
                      name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{nodeId}}Archived "
                      name="setArchived"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classAiNode inputAiNode{{nodeId}}Archived "
                      name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if result.archived == true %}
                      checked
    {%- endif %}
                      data-nodeId={{ result.nodeId | tojson }}
                      >archive</wa-checkbox>
  {%- else %}
                      >
                    <wa-option value="" selected="selected"></wa-option>
                    <wa-option value="true">true</wa-option>
                    <wa-option value="false">false</wa-option>
                  </wa-select>
  {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputArchivedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputClusterNameAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_clusterName">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] cluster name"
                      label="cluster name"
                      hint="
The name of this cluster"
                      id="{{classApiMethodMethod}}_clusterName"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_clusterName setClusterName classAiNode inputAiNode{{nodeId}}ClusterName "
                      name="setClusterName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_clusterName setClusterName classAiNode inputAiNode{{nodeId}}ClusterName "
                      name="setClusterName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_clusterName valueClusterName classAiNode inputAiNode{{nodeId}}ClusterName "
                      name="clusterName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.clusterName | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmClusterNameAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputClusterNameAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNodeNameAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_nodeName">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] node name"
                      label="node name"
                      hint="
The name of this node"
                      id="{{classApiMethodMethod}}_nodeName"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_nodeName setNodeName classAiNode inputAiNode{{nodeId}}NodeName "
                      name="setNodeName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_nodeName setNodeName classAiNode inputAiNode{{nodeId}}NodeName "
                      name="setNodeName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_nodeName valueNodeName classAiNode inputAiNode{{nodeId}}NodeName "
                      name="nodeName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.nodeName | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNodeNameAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNodeNameAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDescriptionAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_description">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] description"
                      label="description"
                      hint="
A description of this node"
                      id="{{classApiMethodMethod}}_description"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classAiNode inputAiNode{{nodeId}}Description "
                      name="setDescription"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classAiNode inputAiNode{{nodeId}}Description "
                      name="setDescription"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_description valueDescription classAiNode inputAiNode{{nodeId}}Description "
                      name="description"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.description | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDescriptionAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDescriptionAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNodeIdAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_nodeId">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] node ID"
                      label="node ID"
                      hint="
The unique ID of this node"
                      id="{{classApiMethodMethod}}_nodeId"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_nodeId setNodeId classAiNode inputAiNode{{nodeId}}NodeId "
                      name="setNodeId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_nodeId setNodeId classAiNode inputAiNode{{nodeId}}NodeId "
                      name="setNodeId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_nodeId valueNodeId classAiNode inputAiNode{{nodeId}}NodeId "
                      name="nodeId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.nodeId | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNodeIdAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNodeIdAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputIdAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_id">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] entity ID"
                      label="entity ID"
                      hint="
A unique ID for this Smart Data Model"
                      id="{{classApiMethodMethod}}_id"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_id setId classAiNode inputAiNode{{nodeId}}Id "
                      name="setId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_id setId classAiNode inputAiNode{{nodeId}}Id "
                      name="setId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_id valueId classAiNode inputAiNode{{nodeId}}Id "
                      name="id"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.id | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmIdAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputIdAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputGpuDevicesTotalAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_gpuDevicesTotal">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[Integer] GPU devices total"
                      label="GPU devices total"
                      hint="
The total number of GPU devices on this cluster. "
                      id="{{classApiMethodMethod}}_gpuDevicesTotal"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal setGpuDevicesTotal classAiNode inputAiNode{{nodeId}}GpuDevicesTotal "
                      name="setGpuDevicesTotal"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal setGpuDevicesTotal classAiNode inputAiNode{{nodeId}}GpuDevicesTotal "
                      name="setGpuDevicesTotal"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal valueGpuDevicesTotal classAiNode inputAiNode{{nodeId}}GpuDevicesTotal "
                      name="gpuDevicesTotal"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.gpuDevicesTotal | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmGpuDevicesTotalAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputGpuDevicesTotalAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildTenantAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildTenant">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD-Tenant"
                      label="NGSILD-Tenant"
                      hint="
The NGSILD-Tenant or Fiware-Service"
                      id="{{classApiMethodMethod}}_ngsildTenant"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant setNgsildTenant classAiNode inputAiNode{{nodeId}}NgsildTenant "
                      name="setNgsildTenant"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant setNgsildTenant classAiNode inputAiNode{{nodeId}}NgsildTenant "
                      name="setNgsildTenant"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant valueNgsildTenant classAiNode inputAiNode{{nodeId}}NgsildTenant "
                      name="ngsildTenant"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildTenant | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildTenantAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildTenantAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildPathAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildPath">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD-Path"
                      label="NGSILD-Path"
                      hint="
The NGSILD-Path or Fiware-ServicePath"
                      id="{{classApiMethodMethod}}_ngsildPath"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath setNgsildPath classAiNode inputAiNode{{nodeId}}NgsildPath "
                      name="setNgsildPath"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath setNgsildPath classAiNode inputAiNode{{nodeId}}NgsildPath "
                      name="setNgsildPath"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath valueNgsildPath classAiNode inputAiNode{{nodeId}}NgsildPath "
                      name="ngsildPath"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildPath | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildPathAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildPathAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildContextAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildContext">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD context"
                      label="NGSILD context"
                      hint="
The NGSILD context URL for @context data"
                      id="{{classApiMethodMethod}}_ngsildContext"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext setNgsildContext classAiNode inputAiNode{{nodeId}}NgsildContext "
                      name="setNgsildContext"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext setNgsildContext classAiNode inputAiNode{{nodeId}}NgsildContext "
                      name="setNgsildContext"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext valueNgsildContext classAiNode inputAiNode{{nodeId}}NgsildContext "
                      name="ngsildContext"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildContext | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildContextAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildContextAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildDataAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildData">
  {%- endif %}
                  <wa-textarea resize="auto"
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[JsonObject] NGSILD data"
                      label="NGSILD data"
                      hint="
The NGSILD data with @context from the context broker"
                      id="{{classApiMethodMethod}}_ngsildData"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData setNgsildData classAiNode inputAiNode{{nodeId}}NgsildData "
                      name="setNgsildData"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData setNgsildData classAiNode inputAiNode{{nodeId}}NgsildData "
                      name="setNgsildData"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData valueNgsildData classAiNode inputAiNode{{nodeId}}NgsildData "
                      name="ngsildData"
    {%- endif %}
  {%- endif %}
{%- if "Page" == classApiMethodMethod %}
                      value="{{ toJsonObjectString(result.ngsildData) | e }}"
{%- endif %}
                      >
</wa-textarea>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildDataAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildDataAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputLocationAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_location">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[Point] location"
                      label="location"
                      hint="
Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon"
                      id="{{classApiMethodMethod}}_location"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeId={{ result.nodeId | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classAiNode inputAiNode{{nodeId}}Location "
                      name="setLocation"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classAiNode inputAiNode{{nodeId}}Location "
                      name="setLocation"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_location valueLocation classAiNode inputAiNode{{nodeId}}Location "
                      name="location"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{ toJsonObjectString(result.location) | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmLocationAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputLocationAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}

{%- macro htmButton_patchAiNode() %}<wa-button variant="brand" id="htmButton_patchAiNode" data-nodeId={{ result.nodeId | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-edit "></i>Modify</wa-button>{%- endmacro %}

{%- macro htmFormButton_patchAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_patchAiNode">Modify AI node</wa-button>
{%- endmacro %}

{%- macro htmForm_patchAiNode() %}
        <wa-dialog with-footer id="patchAiNodeDialog" label="Modify AI node">
          <form id="htmForm_patchAiNode" class="round-row primary-smart-border-radius ">
            <wa-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
            <wa-details open class="HtmRow" id="cluster-details">
              <div slot="summary">
                <span>cluster details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </form>
          {{ htmFormButton_patchAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_postAiNode() %}<wa-button variant="brand" id="htmButton_postAiNode" data-nodeId={{ result.nodeId | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-file-plus "></i>Create</wa-button>{%- endmacro %}

{%- macro htmFormButton_postAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_postAiNode">Create an AI node</wa-button>
{%- endmacro %}

{%- macro htmForm_postAiNode() %}
        <wa-dialog with-footer id="postAiNodeDialog" label="Create an AI node">
          <form id="htmForm_postAiNode" class="round-row primary-smart-border-radius ">
            <div>You can override any default values below: </div>
            <wa-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
            <wa-details open class="HtmRow" id="cluster-details">
              <div slot="summary">
                <span>cluster details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </form>
          {{ htmFormButton_postAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_deleteAiNode() %}<wa-button variant="brand" id="htmButton_deleteAiNode" data-nodeId={{ result.nodeId | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-trash "></i>Delete</wa-button>{%- endmacro %}

{%- macro htmFormButton_deleteAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_deleteAiNode">Delete AI node</wa-button>
{%- endmacro %}

{%- macro htmForm_deleteAiNode() %}
        <wa-dialog with-footer id="deleteAiNodeDialog" label="Delete AI node">
          <form id="htmForm_deleteAiNode" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deleteAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_putimportAiNode() %}<wa-button variant="brand" id="htmButton_putimportAiNode" data-nodeId={{ result.nodeId | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-file-import "></i>Import</wa-button>{%- endmacro %}

{%- macro htmFormButton_putimportAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_putimportAiNode">Import AI nodes</wa-button>
{%- endmacro %}

{%- macro htmForm_putimportAiNode() %}
        <wa-dialog with-footer id="putimportAiNodeDialog" label="Import AI nodes">
          <form id="htmForm_putimportAiNode" class="round-row primary-smart-border-radius ">
            <div>
              <wa-textarea
                  class="PUTImport_searchList "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'nodeId': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </wa-textarea>
            </div>
          </form>
          {{ htmFormButton_putimportAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageAiNode() %}{%- endmacro %}

{%- macro htmFormButton_searchpageAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_searchpageAiNode">Search AI nodes</wa-button>
{%- endmacro %}

{%- macro htmForm_searchpageAiNode() %}
        <div with-footer id="searchpageAiNodeDialog" label="Search AI nodes">
          <div id="htmForm_searchpageAiNode" class="round-row primary-smart-border-radius ">
            <wa-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
            <wa-details open class="HtmRow" id="cluster-details">
              <div slot="summary">
                <span>cluster details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </div>
        </div>
{%- endmacro %}

{%- macro htmButton_deletefilterAiNode() %}<wa-button variant="brand" id="htmButton_deletefilterAiNode" data-nodeId={{ result.nodeId | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-trash "></i>Delete</wa-button>{%- endmacro %}

{%- macro htmFormButton_deletefilterAiNode() %}
          <wa-button variant="brand" slot="footer" type="submit" id="htmFormButton_deletefilterAiNode">Delete AI node</wa-button>
{%- endmacro %}

{%- macro htmForm_deletefilterAiNode() %}
        <wa-dialog with-footer id="deletefilterAiNodeDialog" label="Delete AI node">
          <form id="htmForm_deletefilterAiNode" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deletefilterAiNode() }}
        </wa-dialog>
{%- endmacro %}
          <wa-divider></wa-divider>
          <div id="htmButtonGroup">
            <div class="flex flex-wrap round-column pill-smart-border-radius ">
{% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {% if "PATCH" in scopes %}
    {% if resultCount >= 1 %}
              <wa-button variant="brand" id="refreshThisAiNodeGenPage"
                   onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'nodeId:{{nodeId}}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisAiNodeGenPage')); }, function() { addError(document.querySelector('#refreshThisAiNodeGenPage')); }); return false; ">
                <i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-sync-alt "></i>
                refresh
              </wa-button>
    {% endif %}
    {% if resultCount > 0 %}
              <wa-button variant="brand" id="refreshAllAiNodeGenPage{{ result.nodeId | e }}"
                   onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllAiNodeGenPage{{ result.nodeId | e }}')); }, function() { addError(document.querySelector('#refreshAllAiNodeGenPage{{ result.nodeId | e }}')); }); "
                  >
                <i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-arrows-rotate"></i>
                Refresh all 
              </wa-button>
    {% endif %}
  {% endif %}
{% endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {%- if resultCount > 0 %}
    {{ htmButton_patchAiNode() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmButton_postAiNode() }}
  {%- else %}
    {{ htmButton_postAiNode() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount == 1 %}
    {{ htmButton_deleteAiNode() }}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmButton_putimportAiNode() }}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount > 1 %}
    {{ htmButton_deletefilterAiNode() }}
  {%- endif %}
{%- endif %}

            </div>
          </div>
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {%- if resultCount > 0 %}
    {{ htmForm_patchAiNode() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_postAiNode() }}
  {%- else %}
    {{ htmForm_postAiNode() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deleteAiNode() }}
  {%- else %}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmForm_putimportAiNode() }}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deletefilterAiNode() }}
  {%- else %}
  {%- endif %}
{%- endif %}
