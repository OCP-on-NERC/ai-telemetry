
{%- macro htmButton_patchGpuSlice() %}<sl-button variant="primary" id="htmButton_patchGpuSlice" data-entityId={{ result.entityId | tojson }}><i slot="prefix" class="fas fa-edit "></i>Modify</sl-button>{%- endmacro %}

{%- macro htmFormButton_patchGpuSlice() %}
            <sl-button variant="primary" slot="footer" type="submit" variant="primary"
                id="htmFormButton_patchGpuSlice"
                >Modify GPU slice</sl-button>
{%- endmacro %}

{%- macro htmForm_patchGpuSlice() %}
        <sl-dialog id="patchGpuSliceDialog" label="Modify GPU slice">
          <form id="htmForm_patchGpuSlice" class="round-row primary-smart-border-radius ">
            <sl-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details class="HtmRow" id="gpu-device-details">
              <div slot="summary">
                <span>GPU device details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmSliceNameGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmEntityIdGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </form>
          {{ htmFormButton_patchGpuSlice() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_postGpuSlice() %}<sl-button variant="primary" id="htmButton_postGpuSlice" data-entityId={{ result.entityId | tojson }}><i slot="prefix" class="fas fa-file-plus "></i>Create</sl-button>{%- endmacro %}

{%- macro htmFormButton_postGpuSlice() %}
            <sl-button variant="primary" slot="footer" type="submit" variant="primary"
                id="htmFormButton_postGpuSlice"
                >Create a GPU slice</sl-button>
{%- endmacro %}

{%- macro htmForm_postGpuSlice() %}
        <sl-dialog id="postGpuSliceDialog" label="Create a GPU slice">
          <form id="htmForm_postGpuSlice" class="round-row primary-smart-border-radius ">
            <div>You can override any default values below: </div>
            <sl-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details class="HtmRow" id="gpu-device-details">
              <div slot="summary">
                <span>GPU device details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmSliceNameGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmEntityIdGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </form>
          {{ htmFormButton_postGpuSlice() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_deleteGpuSlice() %}<sl-button variant="primary" id="htmButton_deleteGpuSlice" data-entityId={{ result.entityId | tojson }}><i slot="prefix" class="fas fa-trash "></i>Delete</sl-button>{%- endmacro %}

{%- macro htmFormButton_deleteGpuSlice() %}
            <sl-button variant="primary" slot="footer" type="submit" variant="primary"
                id="htmFormButton_deleteGpuSlice"
                >Delete GPU slice</sl-button>
{%- endmacro %}

{%- macro htmForm_deleteGpuSlice() %}
        <sl-dialog id="deleteGpuSliceDialog" label="Delete GPU slice">
          <form id="htmForm_deleteGpuSlice" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deleteGpuSlice() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_putimportGpuSlice() %}<sl-button variant="primary" id="htmButton_putimportGpuSlice" data-entityId={{ result.entityId | tojson }}><i slot="prefix" class="fas fa-file-import "></i>Import</sl-button>{%- endmacro %}

{%- macro htmFormButton_putimportGpuSlice() %}
            <sl-button variant="primary" slot="footer" type="submit" variant="primary"
                id="htmFormButton_putimportGpuSlice"
                >Import GPU slices</sl-button>
{%- endmacro %}

{%- macro htmForm_putimportGpuSlice() %}
        <sl-dialog id="putimportGpuSliceDialog" label="Import GPU slices">
          <form id="htmForm_putimportGpuSlice" class="round-row primary-smart-border-radius ">
            <div>
              <sl-textarea
                  class="PUTImport_searchList "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'entityId': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </sl-textarea>
            </div>
          </form>
          {{ htmFormButton_putimportGpuSlice() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageGpuSlice() %}{%- endmacro %}

{%- macro htmFormButton_searchpageGpuSlice() %}
            <sl-button variant="primary" slot="footer" type="submit" variant="primary"
                id="htmFormButton_searchpageGpuSlice"
                >Search GPU slices</sl-button>
{%- endmacro %}

{%- macro htmForm_searchpageGpuSlice() %}
        <div id="searchpageGpuSliceDialog" label="Search GPU slices">
          <div id="htmForm_searchpageGpuSlice" class="round-row primary-smart-border-radius ">
            <sl-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details class="HtmRow" id="gpu-device-details">
              <div slot="summary">
                <span>GPU device details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmSliceNameGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmSliceNameGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmEntityIdGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmEntityIdGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDisplayPageGpuSlicePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </div>
        </div>
{%- endmacro %}
{% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {% if "PATCH" in scopes %}
        <sl-divider></sl-divider>
        <div id="htmButtonGroup">
          <div class="flex flex-wrap round-column pill-smart-border-radius ">
    {% if resultCount == 1 %}              <sl-button variant="primary" id="refreshThisGpuSliceGenPage"
                   onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'entityId:{{entityId}}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisGpuSliceGenPage')); }, function() { addError(document.querySelector('#refreshThisGpuSliceGenPage')); }); return false; ">
                <i slot="prefix" class="fas fa-sync-alt "></i>
                refresh
              </sl-button>
    {% endif %}
    {% if resultCount > 0 %}
              <sl-button variant="primary" id="refreshAllGpuSliceGenPage{{ result.entityId | e }}"
                   onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllGpuSliceGenPage{{ result.entityId | e }}')); }, function() { addError(document.querySelector('#refreshAllGpuSliceGenPage{{ result.entityId | e }}')); }); "
                  >
                <i slot="prefix" class="fa-kit fa-solid-arrows-rotate-rotate"></i>
                Refresh all 
              </sl-button>
    {% endif %}
  {% endif %}
{% endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {%- if resultCount > 0 %}
    {{ htmButton_patchGpuSlice() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount == 1 %}
    {%- if entityId is defined %}
      {{ htmButton_postGpuSlice() }}
    {%- else %}
      {{ htmButton_postGpuSlice() }}
    {%- endif %}
  {%- else %}
    {{ htmButton_postGpuSlice() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount == 1 %}
    {%- if entityId is defined %}
      {{ htmButton_deleteGpuSlice() }}
    {%- else %}
    {%- endif %}
  {%- else %}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmButton_putimportGpuSlice() }}
{%- endif %}

          </div>
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {%- if resultCount > 0 %}
    {{ htmForm_patchGpuSlice() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount == 1 %}
    {%- if entityId is defined %}
      {{ htmForm_postGpuSlice() }}
    {%- else %}
      {{ htmForm_postGpuSlice() }}
    {%- endif %}
  {%- else %}
    {{ htmForm_postGpuSlice() }}
  {%- endif %}
{%- endif %}
{% if AUTH_SCOPE_ADMIN in scopes %}
  {%- if resultCount == 1 %}
    {%- if entityId is defined %}
      {{ htmForm_deleteGpuSlice() }}
    {%- else %}
    {%- endif %}
  {%- else %}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmForm_putimportGpuSlice() }}
{%- endif %}
        </div>
