{% extends "en-us/PageLayout.htm" %}

{%- block htmTitlePageLayout %}
{%- block htmTitleBaseModelPage %}
    <title>{% if searchListBaseModel_ is defined %}{% if baseModelCount == 1 %}{% if id is defined %}{% else %}{% endif %}{% else %}{% endif %}{% else %}{% endif %}</title>
{%- endblock htmTitleBaseModelPage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
{%- block htmStylesBaseModelPage %}
{%- endblock htmStylesBaseModelPage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
{{ super() }}
{%- block htmStyleBaseModelPage %}
{%- endblock htmStyleBaseModelPage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsBaseModelPage %}
{%- endblock htmScriptsBaseModelPage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptBaseModelPage %}
    <script>

      function jsWebsocketBaseModel(pk, vars, $response) {
        {%- block jsWebsocketBaseModelPage %}{%- endblock %}
      }

      function jsTooltipBaseModel(e, feature) {
        {%- block jsTooltipBaseModelPage %}{%- endblock %}
      }

      function htmTooltipBaseModel(feature, layer) {
        return `{%- block htmTooltipBaseModelPage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.pageUrlPk)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipBaseModelPage %}`;
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { lat: {{ DEFAULT_MAP_LOCATION.lat }}, lon: {{ DEFAULT_MAP_LOCATION.lon }} };
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('sl-button')
        , customElements.whenDefined('sl-input')
      ]).then(() => {

        var pk = {% if pk is defined %}{{pk}}{% else %}null{% endif %};

        if(pk == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          window.baseModel = JSON.parse(document.querySelector('.pageForm .baseModel')?.value);
        {% if pk is defined %}
        {% endif %}
        }
        window.listBaseModel = JSON.parse(document.querySelector('.pageForm .listBaseModel')?.value);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphBaseModel();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qBaseModel_{{ key }}')?.addEventListener('sl-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('BaseModel', event.target, document.querySelector('#qBaseModelDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qBaseModel_rows')?.addEventListener('sl-change', event => {
          paramChange('BaseModel', event.target, document.querySelector('#qBaseModelDiv_rows'));
        });

        document.querySelector('#qBaseModel_start')?.addEventListener('sl-change', event => {
          paramChange('BaseModel', event.target, document.querySelector('#qBaseModelDiv_start'));
        });

      });
    </script>
{%- endblock htmScriptBaseModelPage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketBaseModelPage %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketBaseModel(websocketBaseModelInner);
{%- endblock websocketBaseModelPage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlBaseModelPage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlBaseModelPage %}
            {%- macro htmBodyAllBaseModelPage() %}
            <h1>
              <a href="{{pageUri}}">
                
                <span></span>
              </a>
            </h1>
            <div id="site-calendar-box">
              <div id="site-calendar"><!-- // --></div>
            </div>
            {{ htmSearchButtonsBaseModelPage() }}
            {{ htmFormsBaseModelPage() }}
            <sl-divider></sl-divider>
            {{ htmPaginationButtonsBaseModelPage() }}
            <div class="grid-mode-details border-radius-x-large" id="site-results-grid">
              {% for item in listBaseModel%}
              <a href="{{ item.pageUrlPk }}">
              </a>
              {% endfor %}
            </div>
            {%- endmacro htmBodyAllBaseModelPage() %}
{%- macro htmSearchButtonsBaseModelPage() %}
        <div id="htmSearchButtons">
<sl-button onclick="document.querySelector('#siteSidebarToggleSearch').show(); "><i slot="prefix" class="fad fa-magnifying-glass hover-box-shadow "></i> Search</sl-button><sl-button onclick="document.querySelector('#siteSidebarToggleFilters').show(); "><i slot="prefix" class="fad fa-filters hover-box-shadow "></i> Filters</sl-button><sl-button onclick="document.querySelector('#siteSidebarToggleRange').show(); "><i slot="prefix" class="fad fa-calendar-range hover-box-shadow "></i> Range</sl-button><sl-button onclick="document.querySelector('#siteSidebarTogglePivot').show(); "><i slot="prefix" class="fad fa-table-pivot hover-box-shadow "></i> Pivot</sl-button><sl-button onclick="document.querySelector('#siteSidebarToggleFieldList').show(); "><i slot="prefix" class="fad fa-list-ul hover-box-shadow "></i> FieldList</sl-button><sl-button onclick="document.querySelector('#siteSidebarToggleStats').show(); "><i slot="prefix" class="fad fa-chart-candlestick hover-box-shadow "></i> Stats</sl-button><sl-button onclick="document.querySelector('#siteSidebarToggleApi').show(); " href="{{ apiUri }}{% if pk is defined %}/{{ pk }}{% else %}{% if id is defined %}/{{ id }}{% else %}{{ queryStr }}{% endif %}{% endif %}"><i slot="prefix" class="fad fa-brackets-curly hover-box-shadow "></i> Api</sl-button>        </div>
{%- endmacro htmSearchButtonsBaseModelPage() %}

{%- macro htmPaginationButtonsBaseModelPage() %}
            <div id="htmPaginationButtons">
              <sl-button-group>
                <sl-tooltip placement="top" content="Show the previous results">
                  <sl-button pill{% if pagination.pagePrevious is defined %} href="{{pageUri}}?start={{pagination.pagePrevious.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-left "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show half the results">
                  <sl-button{% if pagination.rowsPrevious >= pagination['1L'] %} href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsPrevious }}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-minus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show double the results">
                  <sl-button href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsNext }}">
                    <i slot="prefix" class="fas fa-plus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the next results">
                  <sl-button pill{% if pagination.pageNext is defined %} href="{{pageUri}}?start={{pagination.pageNext.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-right "></i>
                  </sl-button>
                </sl-tooltip>
              </sl-button-group>
              <div>{{ pagination.startNum }} –— {{ pagination.endNum }} of {{ pagination.foundNum }}</div>
            </div>
{%- endmacro htmPaginationButtonsBaseModelPage() %}
{%- macro htmFormsBaseModelPage() %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {% if "PATCH" in scopes %}
            <sl-divider></sl-divider>
            <div id="htmButtonGroup">
{% if baseModelCount == 1 %}<sl-button id="refreshBaseModelGenPage" onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'pk:{{pk}}' } ], {}, this, function() { addGlow(document.querySelector('#refreshBaseModelGenPage')); }, function() { addError(document.querySelector('#refreshBaseModelGenPage')); }); return false; "><i slot="prefix" class="fas fa-sync-alt "></i>refresh</sl-button>{% endif %}{% if baseModelCount > 0 %}<sl-button id="refreshBaseModelGenPage{{id}}" onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshBaseModelGenPage{{id}}')); }, function() { addError(document.querySelector('#refreshBaseModelGenPage{{id}}')); }); "><i slot="prefix" class="fa-kit fa-solid-arrows-rotate-rotate"></i>Refresh </sl-button>{% endif %}{% endif %}{% endif %}            </div>
{%- endmacro htmFormsBaseModelPage() %}

    {%- block htmBodyStartPageLayout %}
    {{ super() }}
    {%- block htmBodyStartBaseModelPage %}
    {%- endblock htmBodyStartBaseModelPage %}
    {%- endblock htmBodyStartPageLayout %}

    {%- block htmBodyMiddlePageLayout %}
    {%- block htmBodyMiddleBaseModelPage %}
        <div class="htmBodySidebarBaseModelPage ">
          {%- block htmBodySidebarBaseModelPage %}
          <sl-drawer placement="end" id="siteSidebarToggleSearch">
            <div>
              <span>
              <i class="fad fa-magnifying-glass "></i> Search</span>
            </div>
            <div>
{%- block htmBodySearchBaseModelPage %}
              <div>
                {% for key, value in varsQ.items() %}
                  <div>
                    <div>
                      <label for="qBaseModel_{{ key }}">{{ value.displayName }}<sup> ({{ value.classSimpleName }})</sup></label>
                    </div>
                  </div>
                  <div>
                    <div>
                      <sl-input id="qBaseModel_{{ key }}" placeholder="{{ displayName }}" data-var="{{ key }}" autocomplete="off="></sl-input>
                      <div id="qBaseModelDiv_{{ key }}" class="pageSearchVal "></div>
                    </div>
                  </div>
                {% endfor %}
                <div>
                  <div>
                    <label for="qBaseModel_Start">start<sup> (Long)</sup></label>
                  </div>
                </div>
                <div>
                  <div>
                    <sl-input id="qBaseModel_start" placeholder="{{ displayName }}" class="" data-var="start" autocomplete="off=" value="{{ start }}"></sl-input>
                    <div id="qBaseModelDiv_start" class="pageSearchVal ">start={{ start }}</div>
                  </div>
                </div>
                <div>
                  <div>
                    <label for="qBaseModel_Rows">rows<sup> (Long)</sup></label>
                  </div>
                </div>
                <div>
                  <div>
                    <sl-input id="qBaseModel_rows" placeholder="{{ displayName }}" class="" data-var="rows" autocomplete="off" value="{{ rows }}"></sl-input>
                    <div id="qBaseModelDiv_rows" class="pageSearchVal ">rows={{ rows }}</div>
                  </div>
                </div>
              </div>
              {%- endblock htmBodySearchBaseModelPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFilters">
            <div>
              <span>
              <i class="fad fa-filters "></i> Filters</span>
            </div>
            <div>
              {%- block htmBodyFiltersBaseModelPage %}
              <div>
                {% for key, value in varsFq.items() %}
                  <div class="">
                    <label for="fqBaseModel_{{ key }}">{{ value.displayName }}<sup> ({{ value.classSimpleName }})</sup></label>
                    <div class="display-flex ">
                      <sl-button id="buttonFacetBaseModel_{{ key }}" title="see values " data-var="{{ value.var }}" data-clear="{% if value.facetField is defined %}true{% else %}false{% endif %}"><i class="fas fa-list "></i></sl-button>
                      <sl-input id="fqBaseModel_{{ key }}" placeholder="{{ value.displayName }}" class="" onchange="fqChange('BaseModel', value); " data-var="{{ value.var }}" autocomplete="off=" value="{{ value.val }}"></sl-input>
                    </div>
                  </div>
                  <div>
                    <div class="pageSearchVal " id="pageSearchVal-fqBaseModel_{{ key }}">{% if value.val is defined %}fq={{ value.var }}:{{ value.val | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-buttonFacetBaseModel_{{ key }}">{% if value.facetField.var is defined %}facet.field={{ value.facetField.var }}{% endif %}</div>
                    <div class="pageFacetField pageFacetFieldBaseModel_{{ key }} " id="pageFacetFieldBaseModel_{{ key }}">
{% for facetFieldKey, facetFieldValue in value.facetField.counts.items() %}
                      <sl-tooltip content="{{ facetFieldValue | e }} null total with {{ value.facetField.var | e }} &quot;{{ facetFieldKey | e }}&quot;">
                        <div class="cursor-pointer " data-class="BaseModel" data-var="{{ value.facetField.var }}" data-val="{{ facetFieldKey }}" onclick="fqReplace('BaseModel', this); ">{{ facetFieldValue }}: {{ facetFieldKey }}</div>
                      </sl-tooltip>
{% endfor %}
                    </div>
                  </div>
                {% endfor %}
              </div>
              {%- endblock htmBodyFiltersBaseModelPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleRange">
            <div>
              <span>
              <i class="fad fa-calendar-range "></i> Range</span>
            </div>
            <div>
              {%- block htmBodyRangeBaseModelPage %}
              <table>
                <tr>
                  <td colspan="2">
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeGap-BaseModel">{% if rangeGap is defined %}facet.range.gap={{ rangeGap | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeStart-BaseModel">{% if rangeStart is defined %}facet.range.start={{ rangeStart | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeEnd-BaseModel">{% if rangeEnd is defined %}facet.range.end={{ rangeEnd | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeVar-BaseModel">{% if defaultRangeVar is defined %}facet.range={!tag=r1}{{ defaultRangeVar | urlencode() }}{% endif %}</div>
                  </td>
                </tr>
              </table>
              <table>
                <tr class="">
                  <td class="">
                    <span>Range Gap</span>
                  </td>
                  <td class="">
                    <sl-select name="facet.range.gap" id="pageFacetRangeGap-BaseModel" onchange="facetRangeGapChange('BaseModel', this); ">
                      <sl-option value="+1YEAR"{% if defaultRangeGap == '+1YEAR' %} selected="selected"{% else %}{% endif %}>Year</sl-option>
                      <sl-option value="+1MONTH"{% if defaultRangeGap == '+1MONTH' %} selected="selected"{% else %}{% endif %}>Month</sl-option>
                      <sl-option value="+1WEEK"{% if defaultRangeGap == '+1WEEK' %} selected="selected"{% else %}{% endif %}>Week</sl-option>
                      <sl-option value="+1DAY"{% if defaultRangeGap == '+1DAY' %} selected="selected"{% else %}{% if defaultRangeGap is defined %}{% else %} selected="selected"{% endif %}{% endif %}>Day</sl-option>
                      <sl-option value="+1HOUR"{% if defaultRangeGap == '+1HOUR' %} selected="selected"{% else %}{% endif %}>Hour</sl-option>
                      <sl-option value="+1MINUTE"{% if defaultRangeGap == '+1MINUTE' %} selected="selected"{% else %}{% endif %}>Minute</sl-option>
                      <sl-option value="+1SECOND"{% if defaultRangeGap == '+1SECOND' %} selected="selected"{% else %}{% endif %}>Second</sl-option>
                    </sl-select>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range Start</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeStart" id="pageFacetRangeStart-BaseModel" value="{{ formatZonedDateTime(defaultRangeStart, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeStartChange('BaseModel', this); "></sl-input></span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range End</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeEnd" id="pageFacetRangeEnd-BaseModel" value="{{ formatZonedDateTime(defaultRangeEnd, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeEndChange('BaseModel', this); "></sl-input></span>
                  </td>
                </tr>
              </table>
              <sl-radio-group>                {% for key, value in varsRange.items() %}
                <sl-radio name="pageFacetRange" class="pageFacetRange " id="pageFacetRangeBaseModel_{{ key }}" value="{{ value.var }}"{% if defaultRangeVar == var %} checked="checked"{% endif %} onclick="facetRangeChange('BaseModel', value); ">{{ value.displayName }}</sl-radio>
                {% endfor %}
              </sl-radio-group>
              {%- endblock htmBodyRangeBaseModelPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarTogglePivot">
            <div>
              <span>
              <i class="fad fa-table-pivot "></i> Pivot</span>
            </div>
            <div>
              {%- block htmBodyPivotBaseModelPage %}
              <div style="display: none; " id="pageSearchVal-PivotBaseModelHidden">
                {% for item in defaultPivotVars %}
                  <div class="pageSearchVal-PivotBaseModelHidden " id="pageSearchVal-PivotBaseModelHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div id="pageSearchVal-PivotBaseModel">
                {% if defaultPivotVars is defined and defaultPivotVars.length > 0 %}
                  <div class="pageSearchVal pageSearchVal-PivotBaseModel " id="pageSearchVal-PivotBaseModel_1">facet.pivot={!range=r1}{% for item in defaultPivotVars %}{% if loop.index > 0 %},{% endif %}{{ item }}{% endfor %}</div>
                {% endif %}
              </div>
              {% for key, value in varsFq.items() %}
              <div>
                <sl-checkbox name="pageFacetPivot" class="pageFacetPivot " id="pageFacetPivotBaseModel_{{ key }}" value="{{ value.var }}"{% if pivot is defined %} checked="checked"{% endif %}>{{ value.displayName }}</sl-checkbox>
              </div>
              {% endfor %}
              {%- endblock htmBodyPivotBaseModelPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFieldList">
            <div>
              <span>
              <i class="fad fa-list-ul "></i> Field List</span>
            </div>
            <div>
              {%- block htmBodyFieldListBaseModelPage %}
              <div
 style="display: none; " id="pageSearchVal-FieldListBaseModelHidden">
                {% for item in defaultFieldListVars %}
                  <div class="pageSearchVal-FieldListBaseModelHidden " id="pageSearchVal-FieldListBaseModelHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              {% if defaultFieldListVars is defined and defaultFieldListVars.length > 0 %}
              <div id="pageSearchVal-FieldListBaseModel">
                {% if defaultFieldListVars is defined %}
                  <div class="pageSearchVal pageSearchVal-FieldListBaseModel " id="pageSearchVal-FieldListBaseModel_1">fl={% for item in defaultFieldListVars %}{% if loop.index > 0 %},{% endif %}{{ item }}{% endfor %}</div>
                {% endif %}
              </div>
              {% endif %}
              {% for key, value in varsFq.items() %}
              <div>
                <sl-checkbox name="pageFieldList" class="pageFieldList " id="pageFieldListBaseModel_{{ key }}" value="{{ value.var }}"{% if fieldList is defined %} checked="checked"{% endif %} onclick="facetFieldListChange('BaseModel', value); ">{{ value.displayName }}</sl-checkbox>
              </div>
                {% endfor %}
              {%- endblock htmBodyFieldListBaseModelPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleStats">
            <div>
              <span>
                <i class="fad fa-chart-candlestick "></i>                 Stats</span>
            </div>
            <div>
              {%- block htmBodyStatsBaseModelPage %}
              <div
 style="display: none; " id="pageSearchVal-StatsBaseModelHidden">
                {% for item in defaultStatsVars %}
                  <div class="pageSearchVal-StatsBaseModelHidden " id="pageSearchVal-StatsBaseModelHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div id="pageSearchVal-StatsBaseModel">
                {% if defaultStatsVars is defined %}
                  {% for item in defaultStatsVars %}
                    <div class="pageSearchVal pageSearchVal-StatsBaseModel_{{ item }} " id="pageSearchVal-StatsBaseModel_{{ item }}">stats.field={{ item }}                    </div>
                  {% endfor %}
                {% endif %}
              </div>
              <table>
                {% for key, value in varsFq.items() %}
                  {% if enableStats is defined %}
                    <tr class="">
                      <td class="">
                        <span><sl-checkbox name="pageStats" class="pageStats " id="pageStatsBaseModel_{{ key }}" value="{{ value.var }}"{% if value.stats is defined %} checked="checked"{% endif %} onclick="facetStatsChange('BaseModel', value); ">{{ value.displayName }}</sl-checkbox></span>
                      </td>
                      <td>
                        <div>
                          <label for="pageStatsBaseModel_{{ key }}">{{ value.displayName }}</label>
                        </div>
                        <div class="pageStatsField pageStatsFieldBaseModel_{{ key }} " id="pageStatsFieldBaseModel_{{ key }}">
                          {% if value.stats is defined %}
                            {% for item in value.stats %}
                              {% if item.key == 'name' %}{% else %}
                                <div data-class="BaseModel" data-var="{{ item.var }}" data-val="{{ item.key }}">{{ item.key }}: {{ item }}</div>
                              {% endif %}
                            {% endfor %}
                            {% if value.stats.max is defined %}
                              <div>
                                <span> step </span>
                                <sl-input id="animateStatsStep" placeholder="step" value="1" style="width: 4em; "></sl-input>
                                <span> min </span>
                                <sl-input id="animateStatsMin" placeholder="min" value="{{ value.stats.min }}" style="width: 4em; "></sl-input>
                                <span> max </span>
                                <sl-input id="animateStatsMax" placeholder="max" value="{{ value.stats.max }}" style="width: 4em; "></sl-input>
                                <span> speed in seconds </span>
                                <sl-input id="animateStatsSpeed" placeholder="speed" value="1" style="width: 4em; "></sl-input>
                                <sl-button onclick="animateStats(); ">animate</sl-button>
                              </div>
                            {% endif %}
                          {% endif %}
                        </div>
                      </td>
                    </tr>
                  {% endif %}
                {% endfor %}
              </table>
            {%- endblock htmBodyStatsBaseModelPage %}
            </div>
          </sl-drawer>
          {%- endblock htmBodySidebarBaseModelPage %}
        </div>

        {%- block htmBodyGraphBaseModelPage %}
        <div id="htmBodyGraphBaseModelPage" class="htmBodyGraph "></div>
        {%- endblock htmBodyGraphBaseModelPage %}
        <div class="pageContent ">
          <div id="site-calendar-box">
            <div id="site-calendar"><!-- // --></div>
          </div>
{% if baseModelCount == 0 %}
        <div>
          <sl-tooltip content="back to ">
            <sl-button href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-solid fa-angle-left"></i>
              
            </sl-button>
          </sl-tooltip>
        </div>
        <h1>
          
            <span></span>
        </h1>
        {{ htmSearchButtonsBaseModelPage() }}
            {{ htmFormsBaseModelPage() }}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class=""></span>
          </span>
        </h2>
{% else %}
  {% if baseModelCount == 1 %}
    {% if id is defined %}
        <div>
          <sl-tooltip content="back to ">
            <sl-button href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-solid fa-angle-left"></i>
              
            </sl-button>
          </sl-tooltip>
        </div>
        <h1>
          
          {{baseModel_.objectTitle}}
        </h1>
        {{ htmSearchButtonsBaseModelPage() }}
            {{ htmFormsBaseModelPage() }}
    {% else %}
        {{ htmBodyAllBaseModelPage() }}
    {% endif %}
  {% else %}
        {{ htmBodyAllBaseModelPage() }}
  {% endif %}
{% endif %}
        {%- block htmFormBaseModelPage %}
        <form action="" id="BaseModelForm" class="pageForm " style="" onsubmit="event.preventDefault(); return false; ">
{% if pk is defined %}
          <input name="pk" class="valuePk" type="hidden" value="{{pk}}"/>
          {% endif %}
          <input name="focusId" type="hidden"/>
          <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
          <input name="baseModel" id="baseModel" class="baseModel"  value='{{ toJsonObjectStringInApostrophes(baseModel_) }}' type="hidden"/>
          <input name="listBaseModel" id="listBaseModel" class="listBaseModel"  value='{{ toJsonArrayStringInApostrophes(listBaseModel) }}' type="hidden"/>
        </form>
  {% if id is defined %}
        {{ htmButton_searchpageBaseModel() }}
        {{ htmForm_searchpageBaseModel() }}
  {% endif %}
        {%- endblock htmFormBaseModelPage %}
      {%- endblock htmBodyMiddleBaseModelPage %}
      {%- endblock htmBodyMiddlePageLayout %}

      {%- block htmBodyEndPageLayout %}
      {{ super() }}
      {%- block htmBodyEndBaseModelPage %}
      {%- endblock htmBodyEndBaseModelPage %}
      {%- endblock htmBodyEndPageLayout %}
{%- block htmSuggestedBaseModelPage %}
        <div>
          <div>
            <span>
              search : 
            </span>
          </div>
        </div>
        <div>
          <sl-input
              type="text"
              class="suggestBaseModel "
              name="suggestBaseModel"
              id="suggestBaseModel{{id}}"
              autocomplete="off"
              oninput="suggestBaseModelObjectSuggest( [ { 'name': 'q', 'value': 'objectSuggest:' + this.value }, { 'name': 'rows', 'value': '10' }, { 'name': 'fl', 'value': 'classCanonicalName,pk,pageUrlPk,objectTitle' } ], document.querySelector('#suggestListBaseModel{{id}}'), {{pk}}; "
              onkeyup="if (event.keyCode === 13) { event.preventDefault(); window.location.href = 'null?q={{ query1 }}:' + encodeURIComponent(this.value) + '{{fqs}}{{sorts}}&amp;rows={{start2}}&amp;rows={{rows1}}"
  {% if listBaseModel is defined %}
              value="{{query2}}"
  {% endif %}
              >
          </sl-input>
          <sl-button
              onclick="window.location.href = 'null?q=&quot;, query1, &quot;:' + encodeURIComponent(this.previousElementSibling.value) + '&quot;, fqs, sorts, &quot;&amp;rows=&quot;, start2, &quot;&amp;rows=&quot;, rows1, &quot;'; "
              >
            <i class="fas fa-search "></i>
          </sl-button>
          <div>
            <div>
              <div>
                <ul id="suggestListBaseModel{{id}}">
                </ul>
              </div>
            </div>
          </div>
          <div class="">
            <a href="" class="">
              see 
            </a>
          </div>
        </div>
{%- endblock htmSuggestedBaseModelPage %}

{%- macro inputPkBaseModelPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_pk">
  {%- endif %}
                  <sl-input
                      readonly
                      placeholder="primary key"
                      label="primary key"
                      help-text="
The primary key of this object in the database"
                      id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk="{{ pk }}"
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classBaseModel inputBaseModel{{pk}}Pk "
                      name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classBaseModel inputBaseModel{{pk}}Pk "
                      name="setPk"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_pk valuePk classBaseModel inputBaseModel{{pk}}Pk "
                      name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{baseModel_.pk | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkBaseModelPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputPkBaseModelPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputObjectIdBaseModelPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_objectId">
  {%- endif %}
                  <sl-input
                      {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="ID"
                      label="ID"
                      help-text="
A URL friendly unique ID for this object"
                      id="{{classApiMethodMethod}}_objectId"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk="{{ pk }}"
                      class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classBaseModel inputBaseModel{{pk}}ObjectId "
                      name="setObjectId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classBaseModel inputBaseModel{{pk}}ObjectId "
                      name="setObjectId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_objectId valueObjectId classBaseModel inputBaseModel{{pk}}ObjectId "
                      name="objectId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{baseModel_.objectId | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmObjectIdBaseModelPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputObjectIdBaseModelPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputCreatedBaseModelPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_created">
  {%- endif %}
                  <sl-input
                      type="text"
                      readonly
                      placeholder="created"
                      help-text="A created timestamp for this record in the database"
                      label="created"
                      class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classBaseModel inputBaseModel{{pk}}Created "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_created"
                      value="{%- if baseModel_.created is defined %}{{ formatZonedDateTime(baseModel_.created, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk="{{ pk }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedBaseModelPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputCreatedBaseModelPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputModifiedBaseModelPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_modified">
  {%- endif %}
                  <sl-input
                      type="text"
                      readonly
                      placeholder="modified"
                      help-text="A modified timestamp for this record in the database"
                      label="modified"
                      class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classBaseModel inputBaseModel{{pk}}Modified "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_modified"
                      value="{%- if baseModel_.modified is defined %}{{ formatZonedDateTime(baseModel_.modified, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk="{{ pk }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedBaseModelPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputModifiedBaseModelPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputArchivedBaseModelPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <sl-button
                      id="{{classApiMethodMethod}}_archived"
                      placeholder="archive"
                      label="archive"
                      help-text="For archiving this record"
                      class="label-on-left {{classApiMethodMethod}}_archived classBaseModel inputBaseModel{{pk}}Archived "
                      name="setArchived"
                      data-pk="{{ pk }}"
                      data-val="{{ baseModel_.archived | e }}"
                      >archive</sl-button>
  {%- else %}
  {%- if 'Page' == classApiMethodMethod %}
                  <sl-checkbox
                      id="{{classApiMethodMethod}}_archived"
                      value="true"
  {%- else %}
                  <sl-select
                      id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                      {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="archive"
                      label="archive"
                      help-text="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classBaseModel inputBaseModel{{pk}}Archived "
                      name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classBaseModel inputBaseModel{{pk}}Archived "
                      name="setArchived"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classBaseModel inputBaseModel{{pk}}Archived "
                      name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if baseModel_.archived == true %}
                      checked
    {%- endif %}
                      data-pk="{{ pk }}"
                      >archive</sl-checkbox>
  {%- else %}
                      >
                    <sl-option value="" selected="selected"></sl-option>
                    <sl-option value="true">true</sl-option>
                    <sl-option value="false">false</sl-option>
                  </sl-select>
  {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedBaseModelPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputArchivedBaseModelPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}
